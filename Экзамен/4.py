def count_passwords(n):
  """
  Функция подсчитывает количество возможных паролей длины n,
  состоящих только из цифр, где любые 3 подряд идущие цифры 
  образуют простое число.
  """

  # Создаем массив для хранения количества возможных паролей 
  # длины i, заканчивающихся на цифру j
  dp = [[0 for _ in range(10)] for _ in range(n + 1)]

  # Базовый случай: для паролей длины 1 все цифры допустимы
  for i in range(10):
    dp[1][i] = 1

  # Заполняем массив с помощью динамического программирования
  for i in range(2, n + 1):
    for j in range(10):
      for k in range(10):
        # Проверяем, является ли комбинация "jk" (предыдущая и последняя цифры) простым числом
        if is_prime(int(str(j) + str(k))):
          # Если "jk" - простое число, то суммируем количество паролей, заканчивающихся на k, для всех допустимых k
          for l in range(10):
            if is_prime(int(str(k) + str(l))):
              dp[i][j] += dp[i - 1][k]

  # Суммируем количество паролей, заканчивающихся на любую цифру
  total_passwords = sum(dp[n])
  return total_passwords % (10**9 + 9)

def is_prime(num):
  """
  Функция проверяет, является ли число простым.
  """
  if num <= 1:
    return False
  for i in range(2, int(num**0.5) + 1):
    if num % i == 0:
      return False
  return True

# Ввод данных
n = int(input())

# Вывод ответа
print(count_passwords(n))